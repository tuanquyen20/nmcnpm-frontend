{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport numeral from \"numeral\";\nexport default {\n  data: function data() {\n    return {\n      roomTypesList: [],\n      editDialog: false,\n      createDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [{\n        text: \"ID\",\n        value: \"id\"\n      }, {\n        text: \"Room Type\",\n        value: \"room_type_id\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      updateForm: {\n        id: null,\n        room_type_id: null,\n        room_type: \"\",\n        select: {\n          id: \"\",\n          name: \"\"\n        }\n      },\n      createForm: {\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\"\n      }\n    };\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n      this.loading = true;\n      setTimeout(function () {\n        _this.loading = false;\n        _this.$axios.get(\"/rooms?page=\".concat(_this.page, \"&limit=\").concat(_this.itemsPerPage)).then(function (res) {\n          _this.items = res.data.items;\n          _this.pageCount = res.data.page_count;\n        });\n      }, 1000);\n    },\n    formattedPrice: function formattedPrice(price) {\n      return numeral(price).format(\"0,0\");\n    },\n    deleteItem: function deleteItem(item) {\n      var _this2 = this;\n      this.$axios[\"delete\"](\"/room_types/\".concat(item.id)).then(function (res) {\n        _this2.loadItems();\n      });\n    },\n    showUpdateForm: function showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        description: item.description,\n        background_link: item.background_link\n      };\n    },\n    updateItem: function updateItem() {\n      var _this3 = this;\n      this.$axios.put(\"/room_types/\".concat(this.updateForm.id), {\n        name: this.updateForm.name,\n        price: parseInt(this.updateForm.price, 10),\n        description: this.updateForm.description,\n        background_link: this.updateForm.background_link\n      }).then(function (res) {\n        _this3.editDialog = false;\n        _this3.loadItems();\n      });\n    },\n    createItem: function createItem() {\n      var _this4 = this;\n      this.$axios.post(\"/room_types\", {\n        name: this.createForm.name,\n        price: parseInt(this.createForm.price, 10),\n        description: this.createForm.description,\n        background_link: this.createForm.background_link\n      }).then(function (res) {\n        _this4.createDialog = false;\n        _this4.loadItems();\n      });\n    },\n    getRoomTypesList: function getRoomTypesList() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this5.$axios.get(\"/room_types/all\").then(function (res) {\n                _this5.roomTypesList = res.data;\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    renderRoomType: function renderRoomType(id) {\n      var x = this.roomTypesList.find(function (i) {\n        return i.id === id;\n      });\n      return x.name;\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this6.getRoomTypesList();\n          case 2:\n            _this6.loadItems();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["numeral","data","roomTypesList","editDialog","createDialog","loading","page","pageCount","itemsPerPage","items","headers","text","value","sortable","updateForm","id","room_type_id","room_type","select","name","createForm","price","description","background_link","methods","loadItems","_this","setTimeout","$axios","get","concat","then","res","page_count","formattedPrice","format","deleteItem","item","_this2","showUpdateForm","updateItem","_this3","put","parseInt","createItem","_this4","post","getRoomTypesList","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","renderRoomType","x","find","i","created","_this6","_callee2","_callee2$","_context2"],"sources":["src/components/Rooms.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div>\n      <!-- <v-dialog v-model=\"createDialog\" width=\"900\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            dark\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            small\n            color=\"#252525\"\n            class=\"mb-4\"\n          >\n            <v-icon dark> mdi-plus </v-icon>\n            Create\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title class=\"text-h5 grey lighten-2\">\n            Create Room\n          </v-card-title>\n\n          <v-card-actions>\n            <v-row>\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"createForm.name\"\n                  label=\"Name\"\n                ></v-text-field>\n              </v-col>\n\n              <v-col cols=\"6\">\n                <v-text-field\n                  v-model=\"createForm.price\"\n                  label=\"Price\"\n                  hint=\"VNĐ/hour\"\n                ></v-text-field>\n              </v-col>\n\n              <v-col cols=\"12\">\n                <v-textarea\n                  name=\"input-7-1\"\n                  label=\"Description\"\n                  v-model=\"createForm.description\"\n                  filled\n                ></v-textarea>\n              </v-col>\n\n              <v-col cols=\"12\">\n                <v-textarea\n                  name=\"input-7-1\"\n                  label=\"Background Link\"\n                  v-model=\"createForm.background_link\"\n                  filled\n                ></v-textarea>\n              </v-col>\n            </v-row>\n          </v-card-actions>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"#252525\" class=\"white--text\" @click=\"createItem\">\n              Create\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog> -->\n\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :page.sync=\"page\"\n        :items-per-page=\"itemsPerPage\"\n        hide-default-footer\n        class=\"elevation-1\"\n        :loading=\"loading\"\n      >\n        <template v-slot:[`item.room_type_id`]=\"{ item }\">\n          <span>\n            {{renderRoomType(item.room_type_id)}}\n          </span>\n        </template>\n\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"showUpdateForm(item)\">\n            mdi-pencil\n          </v-icon>\n\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n      </v-data-table>\n\n      <v-pagination\n        v-model=\"page\"\n        :length=\"pageCount\"\n        @next=\"loadItems\"\n        @previous=\"loadItems\"\n        @input=\"loadItems\"\n      ></v-pagination>\n    </div>\n\n    <v-dialog v-model=\"editDialog\" width=\"900\">\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Update Room Type\n        </v-card-title>\n\n        <v-card-actions>\n          <v-row>\n            <v-col cols=\"6\">\n              <v-select\n          v-model=\"updateForm.select\"\n          :hint=\"`ID: ${updateForm.select.id}`\"\n          :items=\"roomTypesList\"\n          item-text=\"name\"\n          item-value=\"id\"\n          label=\"Room Type\"\n          persistent-hint\n          return-object\n          single-line\n        ></v-select>\n            </v-col>\n\n            \n          </v-row>\n        </v-card-actions>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"#252525\" class=\"white--text\" @click=\"updateItem\">\n            Update\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport numeral from \"numeral\";\n\nexport default {\n  data() {\n    return {\n      roomTypesList: [],\n      editDialog: false,\n      createDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [\n        { text: \"ID\", value: \"id\" },\n        { text: \"Room Type\", value: \"room_type_id\" },\n\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n\n      updateForm: {\n        id: null,\n        room_type_id: null,\n        room_type: \"\",\n        select: {\n            id: \"\",\n            name: \"\",\n        }\n      },\n\n      createForm: {\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\",\n      },\n    };\n  },\n\n  methods: {\n    loadItems() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        this.$axios\n          .get(`/rooms?page=${this.page}&limit=${this.itemsPerPage}`)\n          .then((res) => {\n            this.items = res.data.items;\n            this.pageCount = res.data.page_count;\n          });\n      }, 1000);\n    },\n\n    formattedPrice(price) {\n      return numeral(price).format(\"0,0\");\n    },\n\n    deleteItem(item) {\n      this.$axios.delete(`/room_types/${item.id}`).then((res) => {\n        this.loadItems();\n      });\n    },\n\n    showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        description: item.description,\n        background_link: item.background_link,\n      };\n    },\n\n    updateItem() {\n      this.$axios\n        .put(`/room_types/${this.updateForm.id}`, {\n          name: this.updateForm.name,\n          price: parseInt(this.updateForm.price, 10),\n          description: this.updateForm.description,\n          background_link: this.updateForm.background_link,\n        })\n\n        .then((res) => {\n          this.editDialog = false;\n          this.loadItems();\n        });\n    },\n\n    createItem() {\n      this.$axios\n        .post(`/room_types`, {\n          name: this.createForm.name,\n          price: parseInt(this.createForm.price, 10),\n          description: this.createForm.description,\n          background_link: this.createForm.background_link,\n        })\n\n        .then((res) => {\n          this.createDialog = false;\n          this.loadItems();\n        });\n    },\n\n    async getRoomTypesList() {\n     await this.$axios.get(\"/room_types/all\").then((res) => {\n        this.roomTypesList = res.data;\n      });\n    },\n\n    renderRoomType(id) {\n      const x = this.roomTypesList.find((i) => i.id === id);\n      return x.name\n    },\n  },\n\n  async created() {\n    await this.getRoomTypesList();\n    this.loadItems();\n\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}