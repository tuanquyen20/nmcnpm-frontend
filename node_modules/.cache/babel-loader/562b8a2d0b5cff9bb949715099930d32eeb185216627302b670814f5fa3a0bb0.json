{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport numeral from \"numeral\";\nexport default {\n  data: function data() {\n    return {\n      roomTypesList: [],\n      editDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [{\n        text: \"ID\",\n        value: \"id\"\n      }, {\n        text: \"Name\",\n        value: \"name\"\n      }, {\n        text: \"Phone Number\",\n        value: \"phone_number\"\n      }, {\n        text: \"Time\",\n        value: \"time\"\n      }, {\n        text: \"Room ID\",\n        value: \"room_id\"\n      }, {\n        text: \"Combo\",\n        value: \"combo\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Room Type\",\n        value: \"room_type\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      updateForm: {\n        id: null,\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\"\n      }\n    };\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n      this.loading = true;\n      setTimeout(function () {\n        _this.loading = false;\n        _this.$axios.get(\"/orders?page=\".concat(_this.page, \"&limit=\").concat(_this.itemsPerPage)).then(function (res) {\n          _this.items = res.data.items;\n          _this.pageCount = res.data.page_count;\n        });\n      }, 1000);\n    },\n    deleteItem: function deleteItem(item) {\n      var _this2 = this;\n      this.$axios[\"delete\"](\"/room_types/\".concat(item.id)).then(function (res) {\n        _this2.loadItems();\n      });\n    },\n    showUpdateForm: function showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        description: item.description,\n        background_link: item.background_link\n      };\n    },\n    updateItem: function updateItem() {\n      var _this3 = this;\n      this.$axios.put(\"/room_types/\".concat(this.updateForm.id), {\n        name: this.updateForm.name,\n        price: parseInt(this.updateForm.price, 10),\n        description: this.updateForm.description,\n        background_link: this.updateForm.background_link\n      }).then(function (res) {\n        _this3.editDialog = false;\n        _this3.loadItems();\n      });\n    },\n    createItem: function createItem() {\n      var _this4 = this;\n      this.$axios.post(\"/room_types\", {\n        name: this.createForm.name,\n        price: parseInt(this.createForm.price, 10),\n        description: this.createForm.description,\n        background_link: this.createForm.background_link\n      }).then(function (res) {\n        _this4.createDialog = false;\n        _this4.loadItems();\n      });\n    },\n    getRoomTypesList: function getRoomTypesList() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this5.$axios.get(\"/room_types/all\").then(function (res) {\n                _this5.roomTypesList = res.data;\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    renderRoomType: function renderRoomType(id) {\n      var x = this.roomTypesList.find(function (i) {\n        return i.id === id;\n      });\n      return x.name;\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this6.getRoomTypesList();\n          case 2:\n            _this6.loadItems();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["numeral","data","roomTypesList","editDialog","loading","page","pageCount","itemsPerPage","items","headers","text","value","sortable","updateForm","id","name","price","description","background_link","methods","loadItems","_this","setTimeout","$axios","get","concat","then","res","page_count","deleteItem","item","_this2","showUpdateForm","updateItem","_this3","put","parseInt","createItem","_this4","post","createForm","createDialog","getRoomTypesList","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","renderRoomType","x","find","i","created","_this6","_callee2","_callee2$","_context2"],"sources":["src/components/Orders.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div>\n      \n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :page.sync=\"page\"\n        :items-per-page=\"itemsPerPage\"\n        hide-default-footer\n        class=\"elevation-1\"\n        :loading=\"loading\"\n      >\n        <!-- <template v-slot:[`item.name`]=\"{ item }\">\n          <strong>\n            {{ item.name }}\n          </strong>\n        </template>\n\n        <template v-slot:[`item.price`]=\"{ item }\">\n          <span>\n            {{ formattedPrice(item.price) + \" VNĐ/hour\" }}\n          </span>\n        </template>\n\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"showUpdateForm(item)\">\n            mdi-pencil\n          </v-icon>\n\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template> -->\n      </v-data-table>\n\n      <v-pagination\n        v-model=\"page\"\n        :length=\"pageCount\"\n        @next=\"loadItems\"\n        @previous=\"loadItems\"\n        @input=\"loadItems\"\n      ></v-pagination>\n    </div>\n\n    <v-dialog v-model=\"editDialog\" width=\"900\">\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Update Room Type\n        </v-card-title>\n\n        <v-card-actions>\n          <v-row>\n            <v-col cols=\"6\">\n              <v-text-field\n                v-model=\"updateForm.name\"\n                label=\"Name\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"6\">\n              <v-text-field\n                v-model=\"updateForm.price\"\n                label=\"Price\"\n                hint=\"VNĐ/hour\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-textarea\n                name=\"input-7-1\"\n                label=\"Description\"\n                v-model=\"updateForm.description\"\n                filled\n              ></v-textarea>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-textarea\n                name=\"input-7-1\"\n                label=\"Background Link\"\n                v-model=\"updateForm.background_link\"\n                filled\n              ></v-textarea>\n            </v-col>\n          </v-row>\n        </v-card-actions>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"#252525\" class=\"white--text\" @click=\"updateItem\">\n            Update\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport numeral from \"numeral\";\n\nexport default {\n  data() {\n    return {\n        roomTypesList: [],\n      editDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [\n        { text: \"ID\", value: \"id\" },\n        { text: \"Name\", value: \"name\" },\n        { text: \"Phone Number\", value: \"phone_number\" },\n        { text: \"Time\", value: \"time\" },\n        { text: \"Room ID\", value: \"room_id\" },\n        { text: \"Combo\", value: \"combo\" },\n        { text: \"Status\", value: \"status\" },\n        { text: \"Room Type\", value: \"room_type\" },\n\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n\n      updateForm: {\n        id: null,\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\",\n      },\n\n     \n    };\n  },\n\n  methods: {\n    loadItems() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        this.$axios\n          .get(`/orders?page=${this.page}&limit=${this.itemsPerPage}`)\n          .then((res) => {\n            this.items = res.data.items;\n            this.pageCount = res.data.page_count;\n          });\n      }, 1000);\n    },\n\n    \n    deleteItem(item) {\n      this.$axios.delete(`/room_types/${item.id}`).then((res) => {\n        this.loadItems();\n      });\n    },\n\n    showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        price: item.price,\n        description: item.description,\n        background_link: item.background_link,\n      };\n    },\n\n    updateItem() {\n      this.$axios\n        .put(`/room_types/${this.updateForm.id}`, {\n          name: this.updateForm.name,\n          price: parseInt(this.updateForm.price, 10),\n          description: this.updateForm.description,\n          background_link: this.updateForm.background_link,\n        })\n\n        .then((res) => {\n          this.editDialog = false;\n          this.loadItems();\n        });\n    },\n\n    createItem() {\n      this.$axios\n        .post(`/room_types`, {\n          name: this.createForm.name,\n          price: parseInt(this.createForm.price, 10),\n          description: this.createForm.description,\n          background_link: this.createForm.background_link,\n        })\n\n        .then((res) => {\n          this.createDialog = false;\n          this.loadItems();\n        });\n    },\n\n    async getRoomTypesList() {\n      await this.$axios.get(\"/room_types/all\").then((res) => {\n        this.roomTypesList = res.data;\n      });\n    },\n\n    renderRoomType(id) {\n      const x = this.roomTypesList.find((i) => i.id === id);\n      return x.name;\n    },\n  },\n\n  async created() {\n    await this.getRoomTypesList();\n    this.loadItems();\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}