{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      editDialog: false,\n      search: \"\",\n      roomTypesList: [],\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [{\n        text: \"ID\",\n        value: \"id\"\n      }, {\n        text: \"Name\",\n        value: \"name\"\n      }, {\n        text: \"Phone Number\",\n        value: \"phone_number\"\n      }, {\n        text: \"Email\",\n        value: \"email\"\n      }, {\n        text: \"Time\",\n        value: \"time\"\n      }, {\n        text: \"Room ID\",\n        value: \"room_id\"\n      }, {\n        text: \"Combo\",\n        value: \"combo\"\n      }, {\n        text: \"Status\",\n        value: \"status\"\n      }, {\n        text: \"Room Type\",\n        value: \"room_type\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      updateForm: {\n        id: null,\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\"\n      }\n    };\n  },\n  watch: {\n    search: function search(newValue) {\n      this.loadItems();\n    }\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n      this.loading = true;\n      setTimeout(function () {\n        _this.loading = false;\n        _this.$axios.get(\"/orders?page=\".concat(_this.page, \"&limit=\").concat(_this.itemsPerPage, \"&search=\").concat(_this.search)).then(function (res) {\n          _this.items = res.data.items || [];\n          _this.pageCount = res.data.page_count;\n        })[\"catch\"](function (err) {\n          console.error(err);\n        });\n      }, 1000);\n    },\n    deleteItem: function deleteItem(item) {\n      var _this2 = this;\n      this.$axios[\"delete\"](\"/orders/\".concat(item.id)).then(function (res) {\n        _this2.loadItems();\n      })[\"catch\"](function (err) {\n        console.error(err);\n      });\n    },\n    showUpdateForm: function showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        phone_number: item.phone_number,\n        email: item.email\n      };\n    },\n    updateItem: function updateItem(item) {\n      var _this3 = this;\n      this.$axios.put(\"/orders/\".concat(item.id), {\n        id: item.id,\n        name: this.updateForm.name,\n        phone_number: this.updateForm.phone_number,\n        email: this.updateForm.email,\n        time_start: item.time_start,\n        time_end: item.time_end,\n        room_id: item.room_id,\n        combo: item.combo,\n        status: item.status,\n        room_type_id: item.room_type_id\n      }).then(function (res) {\n        _this3.loadItems();\n      });\n    },\n    getRoomTypesList: function getRoomTypesList() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this4.$axios.get(\"/room_types/all\").then(function (res) {\n                _this4.roomTypesList = res.data;\n              })[\"catch\"](function (err) {\n                console.error(err);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    renderRoomType: function renderRoomType(id) {\n      var x = this.roomTypesList.find(function (i) {\n        return i.id === id;\n      });\n      return x.name;\n    }\n  },\n  created: function created() {\n    var _this5 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this5.getRoomTypesList();\n          case 2:\n            _this5.loadItems();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["data","editDialog","search","roomTypesList","loading","page","pageCount","itemsPerPage","items","headers","text","value","sortable","updateForm","id","name","price","description","background_link","watch","newValue","loadItems","methods","_this","setTimeout","$axios","get","concat","then","res","page_count","err","console","error","deleteItem","item","_this2","showUpdateForm","phone_number","email","updateItem","_this3","put","time_start","time_end","room_id","combo","status","room_type_id","getRoomTypesList","_this4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","renderRoomType","x","find","i","created","_this5","_callee2","_callee2$","_context2"],"sources":["src/components/Orders.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div>\n      <v-text-field v-model=\"search\" label=\"Search\" append-icon=\"mdi-magnify\"></v-text-field>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :page.sync=\"page\"\n        :items-per-page=\"itemsPerPage\"\n        hide-default-footer\n        class=\"elevation-1\"\n        :loading=\"loading\"\n      >\n        <template v-slot:[`item.time`]=\"{ item }\">\n          <span>\n            {{ item.time_start + \" - \" + item.time_end }}\n          </span>\n        </template>\n\n        <template v-slot:[`item.room_type`]=\"{ item }\">\n          <span>\n            {{ renderRoomType(item.room_type_id) }}\n          </span>\n        </template>\n\n        <template v-slot:[`item.phone_number`]=\"{ item }\">\n          <strong>\n            {{ item.phone_number }}\n          </strong>\n        </template>\n\n        <template v-slot:[`item.status`]=\"{ item }\">\n          <v-chip\n            :color=\"item.status === 'unconfirmed' ? 'red' : 'green'\"\n            text-color=\"white\"\n          >\n            {{ item.status === \"unconfirmed\" ? \"Unconfirmed\" : \"Confirmed\" }}\n          </v-chip>\n        </template>\n\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon\n            v-if=\"item.status === 'unconfirmed'\"\n            small\n            color=\"green\"\n            class=\"mr-2\"\n            @click=\"updateItem(item)\"\n          >\n            mdi-check-circle\n          </v-icon>\n\n          <v-icon\n            v-if=\"item.status === 'confirmed'\"\n            small\n            color=\"red\"\n            class=\"mr-2\"\n            @click=\"updateItem(item)\"\n          >\n            mdi-close-box\n          </v-icon>\n\n          <v-icon small class=\"mr-2\" @click=\"showUpdateForm(item)\">\n            mdi-pencil\n          </v-icon>\n\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n      </v-data-table>\n\n      <v-pagination\n        v-model=\"page\"\n        :length=\"pageCount\"\n        @next=\"loadItems\"\n        @previous=\"loadItems\"\n        @input=\"loadItems\"\n      ></v-pagination>\n    </div>\n\n\n    <v-dialog v-model=\"editDialog\" width=\"500\">\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Update Order\n        </v-card-title>\n\n        <v-card-actions>\n          <v-row>\n            <v-col cols=\"12\">\n              <v-text-field\n                v-model=\"updateForm.name\"\n                label=\"Name\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-text-field\n                v-model=\"updateForm.phone_number\"\n                label=\"Phone Number\"\n              ></v-text-field>\n            </v-col>\n\n            <v-col cols=\"12\">\n              <v-text-field\n                v-model=\"updateForm.email\"\n                label=\"Email\"\n              ></v-text-field>\n            </v-col>\n          </v-row>\n        </v-card-actions>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"#252525\" class=\"white--text\" @click=\"updateItem\">\n            Update\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      editDialog: false,\n      search: \"\",\n      roomTypesList: [],\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [\n        { text: \"ID\", value: \"id\" },\n        { text: \"Name\", value: \"name\" },\n        { text: \"Phone Number\", value: \"phone_number\" },\n        { text: \"Email\", value: \"email\" },\n        { text: \"Time\", value: \"time\" },\n        { text: \"Room ID\", value: \"room_id\" },\n        { text: \"Combo\", value: \"combo\" },\n        { text: \"Status\", value: \"status\" },\n        { text: \"Room Type\", value: \"room_type\" },\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n\n      updateForm: {\n        id: null,\n        name: \"\",\n        price: 0,\n        description: \"\",\n        background_link: \"\",\n      },\n    };\n  },\n\n  watch: {\n    search(newValue) {\n      this.loadItems()\n    }\n  },\n\n  methods: {\n    loadItems() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        this.$axios\n          .get(`/orders?page=${this.page}&limit=${this.itemsPerPage}&search=${this.search}`)\n          .then((res) => {\n            this.items = res.data.items || [];\n            this.pageCount = res.data.page_count;\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }, 1000);\n    },\n\n    deleteItem(item) {\n      this.$axios\n        .delete(`/orders/${item.id}`)\n        .then((res) => {\n          this.loadItems();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        name: item.name,\n        phone_number: item.phone_number,\n        email: item.email,\n      };\n    },\n\n    updateItem(item) {\n      this.$axios\n        .put(`/orders/${item.id}`, {\n          id: item.id,\n        name: this.updateForm.name,\n        phone_number: this.updateForm.phone_number,\n        email: this.updateForm.email,\n        time_start: item.time_start,\n        time_end: item.time_end,\n        room_id: item.room_id,\n        combo: item.combo,\n        status: item.status,\n        room_type_id: item.room_type_id\n        })\n\n        .then((res) => {\n          this.loadItems();\n        });\n    },\n\n    async getRoomTypesList() {\n      await this.$axios\n        .get(\"/room_types/all\")\n        .then((res) => {\n          this.roomTypesList = res.data;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    renderRoomType(id) {\n      const x = this.roomTypesList.find((i) => i.id === id);\n      return x.name;\n    },\n  },\n\n  async created() {\n    await this.getRoomTypesList();\n    this.loadItems();\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}