{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport numeral from \"numeral\";\nexport default {\n  data: function data() {\n    return {\n      roomTypesList: [],\n      editDialog: false,\n      createDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [{\n        text: \"ID\",\n        value: \"id\"\n      }, {\n        text: \"Room Type\",\n        value: \"room_type_id\"\n      }, {\n        text: \"Actions\",\n        value: \"actions\",\n        sortable: false\n      }],\n      updateForm: {\n        id: null,\n        select: {\n          id: \"\",\n          name: \"\"\n        }\n      },\n      createForm: {\n        select: {\n          id: \"\",\n          name: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n      this.loading = true;\n      setTimeout(function () {\n        _this.loading = false;\n        _this.$axios.get(\"/rooms?page=\".concat(_this.page, \"&limit=\").concat(_this.itemsPerPage)).then(function (res) {\n          _this.items = res.data.items;\n          _this.pageCount = res.data.page_count;\n        })[\"catch\"](function (err) {\n          console.error(err);\n        });\n      }, 1000);\n    },\n    formattedPrice: function formattedPrice(price) {\n      return numeral(price).format(\"0,0\");\n    },\n    deleteItem: function deleteItem(item) {\n      var _this2 = this;\n      this.$axios[\"delete\"](\"/rooms/\".concat(item.id)).then(function (res) {\n        _this2.loadItems();\n      })[\"catch\"](function (err) {\n        console.error(err);\n      });\n    },\n    showUpdateForm: function showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        select: {\n          id: item.room_type_id,\n          name: this.renderRoomType(item.room_type_id)\n        }\n      };\n    },\n    updateItem: function updateItem() {\n      var _this3 = this;\n      this.$axios.put(\"/rooms/\".concat(this.updateForm.id), {\n        room_type_id: this.updateForm.select.id\n      }).then(function (res) {\n        _this3.editDialog = false;\n        _this3.loadItems();\n      })[\"catch\"](function (err) {\n        console.error(err);\n      });\n    },\n    createItem: function createItem() {\n      var _this4 = this;\n      this.$axios.post(\"/rooms\", {\n        room_type_id: this.createForm.select.id\n      }).then(function (res) {\n        _this4.createDialog = false;\n        _this4.createForm = {\n          select: {\n            id: \"\",\n            name: \"\"\n          }\n        };\n        _this4.loadItems();\n      })[\"catch\"](function (err) {\n        console.error(err);\n      });\n    },\n    getRoomTypesList: function getRoomTypesList() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this5.$axios.get(\"/room_types/all\").then(function (res) {\n                _this5.roomTypesList = res.data;\n              })[\"catch\"](function (err) {\n                console.error(err);\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    renderRoomType: function renderRoomType(id) {\n      var x = this.roomTypesList.find(function (i) {\n        return i.id === id;\n      });\n      return x.name;\n    }\n  },\n  created: function created() {\n    var _this6 = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this6.getRoomTypesList();\n          case 2:\n            _this6.loadItems();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};","map":{"version":3,"names":["numeral","data","roomTypesList","editDialog","createDialog","loading","page","pageCount","itemsPerPage","items","headers","text","value","sortable","updateForm","id","select","name","createForm","methods","loadItems","_this","setTimeout","$axios","get","concat","then","res","page_count","err","console","error","formattedPrice","price","format","deleteItem","item","_this2","showUpdateForm","room_type_id","renderRoomType","updateItem","_this3","put","createItem","_this4","post","getRoomTypesList","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop","x","find","i","created","_this6","_callee2","_callee2$","_context2"],"sources":["src/components/Rooms.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div>\n      <v-dialog v-model=\"createDialog\" width=\"900\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            dark\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            small\n            color=\"#252525\"\n            class=\"mb-4\"\n          >\n            <v-icon dark> mdi-plus </v-icon>\n            Create\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title class=\"text-h5 grey lighten-2\">\n            Create Room\n          </v-card-title>\n\n          <v-card-actions>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-select\n                  v-model=\"createForm.select\"\n                  :hint=\"`ID: ${createForm.select.id}`\"\n                  :items=\"roomTypesList\"\n                  item-text=\"name\"\n                  item-value=\"id\"\n                  label=\"Room Type\"\n                  persistent-hint\n                  return-object\n                  single-line\n                ></v-select>\n              </v-col>\n            </v-row>\n          </v-card-actions>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"#252525\" class=\"white--text\" @click=\"createItem\">\n              Create\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"items\"\n        :page.sync=\"page\"\n        :items-per-page=\"itemsPerPage\"\n        hide-default-footer\n        class=\"elevation-1\"\n        :loading=\"loading\"\n      >\n        <template v-slot:[`item.room_type_id`]=\"{ item }\">\n          <span>\n            {{ renderRoomType(item.room_type_id) }}\n          </span>\n        </template>\n\n        <template v-slot:[`item.actions`]=\"{ item }\">\n          <v-icon small class=\"mr-2\" @click=\"showUpdateForm(item)\">\n            mdi-pencil\n          </v-icon>\n\n          <v-icon small @click=\"deleteItem(item)\"> mdi-delete </v-icon>\n        </template>\n      </v-data-table>\n\n      <v-pagination\n        v-model=\"page\"\n        :length=\"pageCount\"\n        @next=\"loadItems\"\n        @previous=\"loadItems\"\n        @input=\"loadItems\"\n      ></v-pagination>\n    </div>\n\n    <v-dialog v-model=\"editDialog\" width=\"900\">\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Update Room Type\n        </v-card-title>\n\n        <v-card-actions>\n          <v-row>\n            <v-col cols=\"12\">\n              <v-select\n                v-model=\"updateForm.select\"\n                :hint=\"`ID: ${updateForm.select.id}`\"\n                :items=\"roomTypesList\"\n                item-text=\"name\"\n                item-value=\"id\"\n                label=\"Room Type\"\n                persistent-hint\n                return-object\n                single-line\n              ></v-select>\n            </v-col>\n          </v-row>\n        </v-card-actions>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"#252525\" class=\"white--text\" @click=\"updateItem\">\n            Update\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport numeral from \"numeral\";\n\nexport default {\n  data() {\n    return {\n      roomTypesList: [],\n      editDialog: false,\n      createDialog: false,\n      loading: false,\n      page: 1,\n      pageCount: 0,\n      itemsPerPage: 10,\n      items: [],\n      headers: [\n        { text: \"ID\", value: \"id\" },\n        { text: \"Room Type\", value: \"room_type_id\" },\n\n        { text: \"Actions\", value: \"actions\", sortable: false },\n      ],\n\n      updateForm: {\n        id: null,\n        select: {\n          id: \"\",\n          name: \"\",\n        },\n      },\n\n      createForm: {\n        select: {\n          id: \"\",\n          name: \"\",\n        },\n      },\n    };\n  },\n\n  methods: {\n    loadItems() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        this.$axios\n          .get(`/rooms?page=${this.page}&limit=${this.itemsPerPage}`)\n          .then((res) => {\n            this.items = res.data.items;\n            this.pageCount = res.data.page_count;\n          })\n          .catch((err) => {\n            console.error(err);\n          });\n      }, 1000);\n    },\n\n    formattedPrice(price) {\n      return numeral(price).format(\"0,0\");\n    },\n\n    deleteItem(item) {\n      this.$axios\n        .delete(`/rooms/${item.id}`)\n        .then((res) => {\n          this.loadItems();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    showUpdateForm(item) {\n      this.editDialog = true;\n      this.updateForm = {\n        id: item.id,\n        select: {\n          id: item.room_type_id,\n          name: this.renderRoomType(item.room_type_id),\n        },\n      };\n    },\n\n    updateItem() {\n      this.$axios\n        .put(`/rooms/${this.updateForm.id}`, {\n          room_type_id: this.updateForm.select.id,\n        })\n\n        .then((res) => {\n          this.editDialog = false;\n          this.loadItems();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    createItem() {\n      this.$axios\n        .post(`/rooms`, {\n          room_type_id: this.createForm.select.id,\n        })\n\n        .then((res) => {\n          this.createDialog = false;\n          this.createForm = {\n            select: {\n              id: \"\",\n              name: \"\",\n            },\n          };\n          this.loadItems();\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    async getRoomTypesList() {\n      await this.$axios\n        .get(\"/room_types/all\")\n        .then((res) => {\n          this.roomTypesList = res.data;\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n\n    renderRoomType(id) {\n      const x = this.roomTypesList.find((i) => i.id === id);\n      return x.name;\n    },\n  },\n\n  async created() {\n    await this.getRoomTypesList();\n    this.loadItems();\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}