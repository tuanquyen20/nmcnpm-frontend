{"ast":null,"code":"import \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      itemsPerPage: 4,\n      items: [],\n      loading: false,\n      createForm: {\n        title: \"\",\n        avatar: \"\",\n        content: [],\n        contentInput: {\n          paragraph: \"\",\n          image: \"\"\n        }\n      }\n    };\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n      this.loading = true;\n      setTimeout(function () {\n        _this.loading = false;\n        _this.$axios.get(\"/posts?page=1&limit=\".concat(_this.itemsPerPage)).then(function (res) {\n          _this.items = res.data.items;\n        });\n      }, 1000);\n    },\n    viewPost: function viewPost(id) {\n      this.$router.push({\n        name: 'post-page',\n        params: {\n          id: id\n        }\n      });\n    },\n    morePost: function morePost() {\n      this.itemsPerPage += 4;\n      this.loadItems();\n    },\n    addContentToEnd: function addContentToEnd(paragraph, image, formType) {\n      if (formType === \"create\") {\n        this.createForm.content.push({\n          paragraph: paragraph,\n          image: image\n        });\n        this.createForm.contentInput = {\n          paragraph: \"\",\n          image: \"\"\n        };\n      }\n    },\n    deleteContent: function deleteContent(item, formType) {\n      if (formType === \"create\") {\n        this.createForm.content = this.createForm.content.filter(function (e) {\n          return e != item;\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.loadItems();\n  }\n};","map":{"version":3,"names":["data","itemsPerPage","items","loading","createForm","title","avatar","content","contentInput","paragraph","image","methods","loadItems","_this","setTimeout","$axios","get","concat","then","res","viewPost","id","$router","push","name","params","morePost","addContentToEnd","formType","deleteContent","item","filter","e","created"],"sources":["src/components/HomePosts.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <div class=\"mt-6 mb-6\" style=\"font-size: 25px; margin-left: 125px\">\n      See our post\n\n      <v-dialog v-model=\"createDialog\" width=\"1000\">\n        <template v-slot:activator=\"{ on, attrs }\">\n          <v-btn\n            dark\n            v-bind=\"attrs\"\n            v-on=\"on\"\n            small\n            color=\"#252525\"\n            class=\"mb-4\"\n          >\n            <v-icon dark> mdi-plus </v-icon>\n            Create\n          </v-btn>\n        </template>\n        <v-card>\n          <v-card-title class=\"text-h5 grey lighten-2\">\n            Create Posts\n          </v-card-title>\n\n          <v-card-actions>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"createForm.title\"\n                  label=\"Title\"\n                ></v-text-field>\n              </v-col>\n\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"createForm.avatar\"\n                  label=\"Avatar Link\"\n                ></v-text-field>\n              </v-col>\n\n             \n\n              <v-col\n                cols=\"12\"\n                v-for=\"(item, index) in createForm.content\"\n                :key=\"index\"\n              >\n                <v-row>\n                  <v-col cols=\"8\">\n                    <v-textarea\n                      name=\"input-7-1\"\n                      label=\"Paragraph\"\n                      v-model=\"item.paragraph\"\n                      filled\n                    ></v-textarea>\n                  </v-col>\n\n                  <v-col cols=\"3\">\n                    <v-textarea\n                      name=\"input-7-1\"\n                      rows=\"2\"\n                      label=\"Image link\"\n                      v-model=\"item.image\"\n                      filled\n                    ></v-textarea>\n                  </v-col>\n\n                  <v-col cols=\"1\">\n                    <v-btn class=\"mx-2\" small fab dark color=\"red\">\n                      <v-icon dark @click=\"deleteContent(item, 'create')\">\n                        mdi-minus\n                      </v-icon>\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-col>\n\n              <v-col cols=\"12\">\n                <v-row>\n                  <v-col cols=\"8\">\n                    <v-textarea\n                      name=\"input-7-1\"\n                      label=\"Paragraph\"\n                      v-model=\"createForm.contentInput.paragraph\"\n                      filled\n                    ></v-textarea>\n                  </v-col>\n\n                  <v-col cols=\"3\">\n                    <v-textarea\n                      name=\"input-7-1\"\n                      rows=\"2\"\n                      label=\"Image link\"\n                      v-model=\"createForm.contentInput.image\"\n                      filled\n                    ></v-textarea>\n                  </v-col>\n\n                  <v-col cols=\"1\">\n                    <v-btn\n                      class=\"mx-2\"\n                      small\n                      fab\n                      dark\n                      color=\"indigo\"\n                      @click=\"\n                        addContentToEnd(\n                          createForm.contentInput.paragraph,\n                          createForm.contentInput.image,\n                          'create'\n                        )\n                      \"\n                    >\n                      <v-icon dark> mdi-plus </v-icon>\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-col>\n            </v-row>\n          </v-card-actions>\n\n          <v-divider></v-divider>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"#252525\" class=\"white--text\" @click=\"createItem\">\n              Create\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </div>\n\n\n\n    <div style=\"margin-left: 125px; margin-right: 125px\" class=\"mb-6\">\n      <v-row>\n        <v-col cols=\"3\" class=\"post\" v-for=\"(item, i) in items\" :key=\"i\">\n          <div class=\"post-avatar\" @click=\"viewPost(item.id)\">\n            <v-img width=\"100%\" height=\"200\" class=\"rounded-lg\" :src=\"item.avatar\"></v-img>\n          </div>\n          <div class=\"post-title\" @click=\"viewPost(item.id)\">\n            <strong>\n              {{ item.title }}\n            </strong>\n          </div>\n\n          <div>\n            <p style=\"opacity: 0.7; font-size: 12px\">{{ item.created_at }}</p>\n          </div>\n        </v-col>\n      </v-row>\n\n      <div class=\"more-post\">\n        <v-icon\n          dark\n          v-if=\"!loading\"\n          color=\"#252525\"\n          class=\"icon\"\n          @click=\"morePost\"\n        >\n          mdi-chevron-down</v-icon\n        >\n\n        <v-progress-circular\n          v-if=\"loading\"\n          indeterminate\n          color=\"primary\"\n        ></v-progress-circular>\n      </div>\n    </div>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      itemsPerPage: 4,\n      items: [],\n      loading: false,\n      createForm: {\n        title: \"\",\n        avatar: \"\",\n        content: [],\n\n        contentInput: {\n          paragraph: \"\",\n          image: \"\",\n        },\n      },\n    };\n  },\n\n  methods: {\n    loadItems() {\n      this.loading = true;\n      setTimeout(() => {\n        this.loading = false;\n        this.$axios\n          .get(`/posts?page=1&limit=${this.itemsPerPage}`)\n          .then((res) => {\n            this.items = res.data.items;\n          });\n      }, 1000);\n    },\n\n    viewPost(id) {\n      this.$router.push({ name: 'post-page', params: { id: id } });\n\n    },\n\n    morePost() {\n      this.itemsPerPage += 4;\n      this.loadItems();\n    },\n\n    addContentToEnd(paragraph, image, formType) {\n      if (formType === \"create\") {\n        this.createForm.content.push({\n          paragraph: paragraph,\n          image: image,\n        });\n\n        this.createForm.contentInput = {\n          paragraph: \"\",\n          image: \"\",\n        };\n      }\n    },\n\n    deleteContent(item, formType) {\n      if (formType === \"create\") {\n        this.createForm.content = this.createForm.content.filter(\n          (e) => e != item\n        );\n      }\n    },\n  },\n\n  created() {\n    this.loadItems();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.post {\n  .post-avatar,\n  .post-title {\n    cursor: pointer;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n}\n\n.more-post {\n  text-align: center;\n\n  .icon {\n    cursor: pointer;\n    &:hover {\n      opacity: 0.5;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;AA+KA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,YAAA;MACAC,KAAA;MACAC,OAAA;MACAC,UAAA;QACAC,KAAA;QACAC,MAAA;QACAC,OAAA;QAEAC,YAAA;UACAC,SAAA;UACAC,KAAA;QACA;MACA;IACA;EACA;EAEAC,OAAA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,KAAAV,OAAA;MACAW,UAAA;QACAD,KAAA,CAAAV,OAAA;QACAU,KAAA,CAAAE,MAAA,CACAC,GAAA,wBAAAC,MAAA,CAAAJ,KAAA,CAAAZ,YAAA,GACAiB,IAAA,WAAAC,GAAA;UACAN,KAAA,CAAAX,KAAA,GAAAiB,GAAA,CAAAnB,IAAA,CAAAE,KAAA;QACA;MACA;IACA;IAEAkB,QAAA,WAAAA,SAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QAAAC,IAAA;QAAAC,MAAA;UAAAJ,EAAA,EAAAA;QAAA;MAAA;IAEA;IAEAK,QAAA,WAAAA,SAAA;MACA,KAAAzB,YAAA;MACA,KAAAW,SAAA;IACA;IAEAe,eAAA,WAAAA,gBAAAlB,SAAA,EAAAC,KAAA,EAAAkB,QAAA;MACA,IAAAA,QAAA;QACA,KAAAxB,UAAA,CAAAG,OAAA,CAAAgB,IAAA;UACAd,SAAA,EAAAA,SAAA;UACAC,KAAA,EAAAA;QACA;QAEA,KAAAN,UAAA,CAAAI,YAAA;UACAC,SAAA;UACAC,KAAA;QACA;MACA;IACA;IAEAmB,aAAA,WAAAA,cAAAC,IAAA,EAAAF,QAAA;MACA,IAAAA,QAAA;QACA,KAAAxB,UAAA,CAAAG,OAAA,QAAAH,UAAA,CAAAG,OAAA,CAAAwB,MAAA,CACA,UAAAC,CAAA;UAAA,OAAAA,CAAA,IAAAF,IAAA;QAAA,CACA;MACA;IACA;EACA;EAEAG,OAAA,WAAAA,QAAA;IACA,KAAArB,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}