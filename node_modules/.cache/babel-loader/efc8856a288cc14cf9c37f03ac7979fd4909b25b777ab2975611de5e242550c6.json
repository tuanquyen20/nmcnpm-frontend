{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    userInfor: {},\n    isAdmin: false,\n    isLogged: false\n  },\n  getters: {\n    getUserInfor: function getUserInfor(state) {\n      return state.userInfor;\n    },\n    getIsAdmin: function getIsAdmin(state) {\n      return state.isAdmin;\n    },\n    getIsLogged: function getIsLogged(state) {\n      return state.isLogged;\n    }\n  },\n  mutations: {\n    postUserInfor: function postUserInfor(state, userInfor) {\n      state.userInfor = userInfor;\n    },\n    postIsAdmin: function postIsAdmin(state, isAdmin) {\n      state.isAdmin = isAdmin;\n    },\n    postIsLogged: function postIsLogged(state, isLogged) {\n      state.isLogged = isLogged;\n    }\n  },\n  actions: {\n    postUserInfor: function postUserInfor(_ref, userInfor) {\n      var commit = _ref.commit;\n      commit('postUserInfor', userInfor);\n    },\n    postIsAdmin: function postIsAdmin(_ref2, isAdmin) {\n      var commit = _ref2.commit;\n      commit('postIsAdmin', isAdmin);\n    },\n    postIsLogged: function postIsLogged(_ref3, isLogged) {\n      var commit = _ref3.commit;\n      commit('postIsLogged', isLogged);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","userInfor","isAdmin","isLogged","getters","getUserInfor","getIsAdmin","getIsLogged","mutations","postUserInfor","postIsAdmin","postIsLogged","actions","_ref","commit","_ref2","_ref3","modules"],"sources":["/Users/tuanquyen/Desktop/HUST/NMCNPM/nmcnpm-frontend/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    userInfor: {},\n    isAdmin: false,\n    isLogged: false,\n  },\n  getters: {\n    getUserInfor(state) {\n      return state.userInfor\n    },\n\n    getIsAdmin(state) {\n      return state.isAdmin\n    },\n\n    getIsLogged(state) {\n      return state.isLogged\n    }\n  },\n  mutations: {\n    postUserInfor(state, userInfor) {\n      state.userInfor = userInfor\n    },\n\n    postIsAdmin(state, isAdmin) {\n      state.isAdmin = isAdmin\n    },\n\n    postIsLogged(state, isLogged) {\n      state.isLogged = isLogged\n    },\n  },\n  actions: {\n    postUserInfor({ commit }, userInfor) {\n      commit('postUserInfor', userInfor);\n    },\n\n    postIsAdmin({ commit }, isAdmin) {\n      commit('postIsAdmin', isAdmin);\n    },\n\n    postIsLogged({ commit }, isLogged) {\n      commit('postIsLogged', isLogged);\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,SAAS,EAAE,CAAC,CAAC;IACbC,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAACL,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IAEDK,UAAU,WAAAA,WAACN,KAAK,EAAE;MAChB,OAAOA,KAAK,CAACE,OAAO;IACtB,CAAC;IAEDK,WAAW,WAAAA,YAACP,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACG,QAAQ;IACvB;EACF,CAAC;EACDK,SAAS,EAAE;IACTC,aAAa,WAAAA,cAACT,KAAK,EAAEC,SAAS,EAAE;MAC9BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IAEDS,WAAW,WAAAA,YAACV,KAAK,EAAEE,OAAO,EAAE;MAC1BF,KAAK,CAACE,OAAO,GAAGA,OAAO;IACzB,CAAC;IAEDS,YAAY,WAAAA,aAACX,KAAK,EAAEG,QAAQ,EAAE;MAC5BH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B;EACF,CAAC;EACDS,OAAO,EAAE;IACPH,aAAa,WAAAA,cAAAI,IAAA,EAAaZ,SAAS,EAAE;MAAA,IAArBa,MAAM,GAAAD,IAAA,CAANC,MAAM;MACpBA,MAAM,CAAC,eAAe,EAAEb,SAAS,CAAC;IACpC,CAAC;IAEDS,WAAW,WAAAA,YAAAK,KAAA,EAAab,OAAO,EAAE;MAAA,IAAnBY,MAAM,GAAAC,KAAA,CAAND,MAAM;MAClBA,MAAM,CAAC,aAAa,EAAEZ,OAAO,CAAC;IAChC,CAAC;IAEDS,YAAY,WAAAA,aAAAK,KAAA,EAAab,QAAQ,EAAE;MAAA,IAApBW,MAAM,GAAAE,KAAA,CAANF,MAAM;MACnBA,MAAM,CAAC,cAAc,EAAEX,QAAQ,CAAC;IAClC;EACF,CAAC;EACDc,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}